{"version":3,"file":"static/js/674.09f7c24d.chunk.js","mappings":"iUAIMA,EAAM,mCACNC,EAAM,gCAECC,EAAe,mCAAG,8FAChBC,IAAAA,IAAA,UACHF,EADG,uCAC+BD,IACzCI,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAME,QACnB,IAR0B,mFAAH,qDAWfC,EAAsB,mCAAG,WAAMC,GAAN,iFACvBR,IAAAA,IAAA,UACHF,EADG,iBACSU,EADT,oBACuBX,IACjCI,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAME,QACnB,IARiC,mFAAH,sDAWtBG,EAAmB,mCAAG,WAAOC,EAAMF,GAAb,iFACpBR,IAAAA,IAAA,UACHF,EADG,iBACSU,EADT,YACeE,EADf,oBAC+Bb,EAD/B,2BAEVI,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAME,QACnB,IAR8B,mFAAH,wDAWnBK,EAAoB,mCAAG,WAAMC,GAAN,iFACrBZ,IAAAA,IAAA,UAENF,EAFM,gCAEqBD,EAFrB,iCAEiDe,EAFjD,gCAIVX,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAME,QACnB,IAV+B,mFAAH,sDAajCC,EAAuBM,UAAY,CACjCL,GAAIM,IAAAA,OAAAA,YAENL,EAAoBI,UAAY,CAC9BH,KAAMI,IAAAA,OAAAA,WACNN,GAAIM,IAAAA,OAAAA,YAENH,EAAqBE,UAAY,CAC/BD,MAAOE,IAAAA,OAAAA,W,gJC3DIC,EAAoBC,EAAAA,GAAAA,GAAH,gHAOjBC,EAAaD,EAAAA,GAAAA,GAAH,yC,SCAR,SAASE,EAAT,GAAmC,EAAXC,QAAY,IAAD,IAChD,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,GAAcC,EAAAA,EAAAA,IAAU,OAC9BC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAYf,GAIjB,OAHAD,EAAAA,EAAAA,IAAuBgB,EAAYf,IAAIP,MAAK,YAAe,IAAZyB,EAAW,EAAXA,KAC7CJ,EAAaI,EACd,IACM,WAAQ,CAChB,GAAE,CAACH,IAEJ,IACEI,EAMEN,EANFM,eACAC,EAKEP,EALFO,kBACAC,EAIER,EAJFQ,YACAC,EAGET,EAHFS,aACAC,EAEEV,EAFFU,SACAC,EACEX,EADFW,SAGIC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAC7C,OACE,iCACE,SAAC,KAAD,CAAKC,GAAG,OAAOC,QAAQ,OAAOC,QAAQ,OAAtC,UACE,SAAC,KAAD,CAAiBC,GAAIN,EAArB,qBAEF,UAAC,KAAD,CACEO,GAAG,OACHH,QAAQ,OACRI,cAAc,SACdC,WAAW,SACXJ,QAAS,GALX,WAOE,UAAC,KAAD,CAAKK,GAAI,IAAKC,GAAI,EAAGP,QAAQ,OAAOK,WAAW,SAASJ,QAAS,GAAjE,WACE,UAAC,KAAD,CAAKO,MAAM,QAAX,WACE,wBAAKpB,KACL,gBACEqB,IACGnB,EAAD,yCAEsCA,GA5C1C,gEA8CEoB,IAAKtB,QAGT,UAACZ,EAAD,YACE,SAACE,EAAD,WACE,sCAAcW,QAEhB,SAACX,EAAD,WACE,qCAAaa,QAEf,SAACb,EAAD,WACE,sCAAce,QAEhB,SAACf,EAAD,WACE,sCAAcc,QAEhB,SAACd,EAAD,WACE,UAAC,KAAD,CACEsB,QAAQ,OACRK,WAAW,SACXM,eAAe,SACfV,QAAS,GAJX,WAME,SAAC,KAAD,CACEC,GAAG,OACHL,MAAO,CAAEC,KAAMJ,EAAUzB,GAAIe,GAF/B,mBAMA,SAAC,KAAD,CACEkB,GAAG,UACHL,MAAO,CAAEC,KAAMJ,EAAUzB,GAAIe,GAF/B,iCAUR,SAAC,KAAD,SAIP,C","sources":["components/Api/ServiceApi.jsx","components/Pages/MovieDetails.styled.js","components/Pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nconst KEY = '4568c047ac29c58c34b8c5ba81189d61';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const ApiServiseTrand = async () => {\n  return await axios\n    .get(`${URL}trending/movie/week?api_key=${KEY}`)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      toast.error(error.message);\n    });\n};\n\nexport const ApiServiseMovieDetails = async id => {\n  return await axios\n    .get(`${URL}movie/${id}?api_key=${KEY}`)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      toast.error(error.message);\n    });\n};\n\nexport const ApiServiseCastMovie = async (page, id) => {\n  return await axios\n    .get(`${URL}movie/${id}/${page}?api_key=${KEY}&language=en-US&page=1`)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      toast.error(error.message);\n    });\n};\n\nexport const ApiServiceSerchMovie = async query => {\n  return await axios\n    .get(\n      `${URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      toast.error(error.message);\n    });\n};\n\nApiServiseMovieDetails.propTypes = {\n  id: PropTypes.string.isRequired,\n};\nApiServiseCastMovie.propTypes = {\n  page: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\nApiServiceSerchMovie.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListMoviesDetails = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  grid-gap: 20px;\n`;\n\nexport const ItemMovies = styled.li`\n  width: 400px;\n`;\n","import PropTypes from 'prop-types';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { ApiServiseMovieDetails } from '../Api/ServiceApi';\nimport { Box, LinksRouter, LinksRouterBack } from 'CommonStyle/Common.styled';\nimport { ListMoviesDetails, ItemMovies } from './MovieDetails.styled';\n\nconst IMG = 'https://dummyimage.com/300x450/000/0011ff&text=Not+find+photo';\n\nexport default function MovieDetails({ idMovie }) {\n  const [dataMovie, setDataMovie] = useState([]);\n\n  const getIdParams = useParams('id');\n  useEffect(() => {\n    if (!getIdParams.id) return;\n    ApiServiseMovieDetails(getIdParams.id).then(({ data }) => {\n      setDataMovie(data);\n    });\n    return () => {};\n  }, [getIdParams]);\n\n  const {\n    original_title,\n    original_language,\n    poster_path,\n    release_date,\n    overview,\n    homepage,\n  } = dataMovie;\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  return (\n    <>\n      <Box mr=\"auto\" display=\"flex\" gridGap=\"20px\">\n        <LinksRouterBack to={backLinkHref}>Back</LinksRouterBack>\n      </Box>\n      <Box\n        as=\"main\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        gridGap={20}\n      >\n        <Box px={100} py={0} display=\"flex\" alignItems=\"center\" gridGap={20}>\n          <Box color=\"black\">\n            <h2>{original_title}</h2>\n            <img\n              src={\n                !poster_path\n                  ? IMG\n                  : `https://image.tmdb.org/t/p/w300${poster_path}`\n              }\n              alt={original_title}\n            />\n          </Box>\n          <ListMoviesDetails>\n            <ItemMovies>\n              <p>Language: {original_language}</p>\n            </ItemMovies>\n            <ItemMovies>\n              <p>Ralease: {release_date}</p>\n            </ItemMovies>\n            <ItemMovies>\n              <p>Homepage: {homepage}</p>\n            </ItemMovies>\n            <ItemMovies>\n              <p>Overview: {overview}</p>\n            </ItemMovies>\n            <ItemMovies>\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                gridGap={20}\n              >\n                <LinksRouter\n                  to=\"cast\"\n                  state={{ from: location, id: getIdParams }}\n                >\n                  Cast\n                </LinksRouter>\n                <LinksRouter\n                  to=\"reviews\"\n                  state={{ from: location, id: getIdParams }}\n                >\n                  Reviews\n                </LinksRouter>\n              </Box>\n            </ItemMovies>\n          </ListMoviesDetails>\n        </Box>\n        <Outlet />\n      </Box>\n    </>\n  );\n}\n\nMovieDetails.propTypes = {\n  idMovie: PropTypes.number.isRequired,\n};\n"],"names":["KEY","URL","ApiServiseTrand","axios","then","res","catch","error","toast","message","ApiServiseMovieDetails","id","ApiServiseCastMovie","page","ApiServiceSerchMovie","query","propTypes","PropTypes","ListMoviesDetails","styled","ItemMovies","MovieDetails","idMovie","useState","dataMovie","setDataMovie","getIdParams","useParams","useEffect","data","original_title","original_language","poster_path","release_date","overview","homepage","location","useLocation","backLinkHref","state","from","mr","display","gridGap","to","as","flexDirection","alignItems","px","py","color","src","alt","justifyContent"],"sourceRoot":""}