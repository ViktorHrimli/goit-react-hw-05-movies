{"version":3,"file":"static/js/241.d6946704.chunk.js","mappings":"iUAIMA,EAAM,mCACNC,EAAM,gCAECC,EAAe,mCAAG,8FAChBC,IAAAA,IAAA,UACHF,EADG,uCAC+BD,IACzCI,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAME,QACnB,IAR0B,mFAAH,qDAWfC,EAAsB,mCAAG,WAAMC,GAAN,iFACvBR,IAAAA,IAAA,UACHF,EADG,iBACSU,EADT,oBACuBX,IACjCI,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAME,QACnB,IARiC,mFAAH,sDAWtBG,EAAmB,mCAAG,WAAOC,EAAMF,GAAb,iFACpBR,IAAAA,IAAA,UACHF,EADG,iBACSU,EADT,YACeE,EADf,oBAC+Bb,EAD/B,2BAEVI,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAME,QACnB,IAR8B,mFAAH,wDAWnBK,EAAoB,mCAAG,WAAMC,GAAN,oEACpB,KAAVA,EAD8B,iEAIrBZ,IAAAA,IAAA,UAENF,EAFM,gCAEqBD,EAFrB,iCAEiDe,EAFjD,gCAIVX,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAME,QACnB,IAb+B,mFAAH,sDAgBjCC,EAAuBM,UAAY,CACjCL,GAAIM,IAAAA,OAAAA,YAENL,EAAoBI,UAAY,CAC9BH,KAAMI,IAAAA,OAAAA,WACNN,GAAIM,IAAAA,OAAAA,YAENH,EAAqBE,UAAY,CAC/BD,MAAOE,IAAAA,OAAAA,W,0JC9DIC,EAAoBC,EAAAA,GAAAA,GAAH,gHAOjBC,EAAaD,EAAAA,GAAAA,GAAH,yC,SC+DvB,EAlEe,SAAC,GAAmB,IAAjBE,EAAgB,EAAhBA,UACVC,GAAcC,EAAAA,EAAAA,IAAU,MACxBC,GAAWC,EAAAA,EAAAA,MAGfC,EAMEL,EANFK,eACAC,EAKEN,EALFM,kBACAC,EAIEP,EAJFO,YACAC,EAGER,EAHFQ,aACAC,EAEET,EAFFS,SACAC,EACEV,EADFU,SAEF,OACE,+BACE,UAAC,KAAD,CAAKC,GAAI,IAAKC,GAAI,EAAGC,QAAQ,OAAOC,WAAW,SAASC,QAAS,GAAjE,WACE,UAAC,KAAD,CAAKC,MAAM,QAAX,WACE,wBAAKX,KACL,gBACEY,IACGV,EAAD,yCAEsCA,GAvBxC,gEAyBAW,IAAKb,QAGT,UAACR,EAAD,YACE,SAACE,EAAD,WACE,sCAAcO,QAEhB,SAACP,EAAD,WACE,qCAAaS,QAEf,SAACT,EAAD,WACE,sCAAcW,QAEhB,SAACX,EAAD,WACE,sCAAcU,QAEhB,SAACV,EAAD,WACE,UAAC,KAAD,CACEc,QAAQ,OACRC,WAAW,SACXK,eAAe,SACfJ,QAAS,GAJX,WAME,SAAC,KAAD,CACEK,GAAG,OACHC,MAAO,CAAEC,KAAMnB,EAAUb,GAAIW,GAF/B,mBAMA,SAAC,KAAD,CACEmB,GAAG,UACHC,MAAO,CAAEC,KAAMnB,EAAUb,GAAIW,GAF/B,iCAYb,EC/Dc,SAASsB,IAAgB,IAAD,IACrC,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOxB,EAAP,KAAkByB,EAAlB,KACMxB,GAAcC,EAAAA,EAAAA,IAAU,MAEtBwB,GAAcC,EAAAA,EAAAA,UACpB,CAAC,YAAa1B,EAAYX,KAC1B,kBAAMD,EAAAA,EAAAA,IAAuBY,EAAYX,GAAzC,GACA,CACEsC,UAAW,YAAe,IAAZC,EAAW,EAAXA,KACZJ,EAAaI,EACd,EAEDC,QAAS,SAAA5C,GACP6C,MAAM7C,EAAME,QACb,IAVGsC,UAeFM,EAAY,qBADD5B,EAAAA,EAAAA,MACaiB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAC7C,OACE,iCACE,UAAC,KAAD,CAAKW,GAAG,OAAOpB,QAAQ,OAAOE,QAAQ,OAAtC,WACE,SAAC,KAAD,CAAiBK,GAAIY,EAArB,mBACA,SAAC,KAAD,CAAiBZ,GAAG,IAApB,sBAEF,UAAC,KAAD,CACEc,GAAG,OACHrB,QAAQ,OACRsB,cAAc,SACdrB,WAAW,SACXC,QAAS,GALX,UAOGW,GACC,eAAIU,MAAO,CAAEpB,MAAO,OAApB,2BAEA,SAAC,EAAD,CAAQhB,UAAWA,KAErB,SAAC,KAAD,SAIP,C","sources":["components/Api/ServiceApi.jsx","components/Pages/MovieDetails.styled.js","components/Item/ItemMovies.jsx","components/Pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nconst KEY = '4568c047ac29c58c34b8c5ba81189d61';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const ApiServiseTrand = async () => {\n  return await axios\n    .get(`${URL}trending/movie/week?api_key=${KEY}`)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      toast.error(error.message);\n    });\n};\n\nexport const ApiServiseMovieDetails = async id => {\n  return await axios\n    .get(`${URL}movie/${id}?api_key=${KEY}`)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      toast.error(error.message);\n    });\n};\n\nexport const ApiServiseCastMovie = async (page, id) => {\n  return await axios\n    .get(`${URL}movie/${id}/${page}?api_key=${KEY}&language=en-US&page=1`)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      toast.error(error.message);\n    });\n};\n\nexport const ApiServiceSerchMovie = async query => {\n  if (query === '') {\n    return;\n  }\n  return await axios\n    .get(\n      `${URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      toast.error(error.message);\n    });\n};\n\nApiServiseMovieDetails.propTypes = {\n  id: PropTypes.string.isRequired,\n};\nApiServiseCastMovie.propTypes = {\n  page: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\nApiServiceSerchMovie.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListMoviesDetails = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  grid-gap: 20px;\n`;\n\nexport const ItemMovies = styled.li`\n  width: 400px;\n`;\n","import { ListMoviesDetails, ItemMovies } from '../Pages/MovieDetails.styled';\nimport { Box, LinksRouter } from 'CommonStyle/Common.styled';\nimport { useLocation, useParams } from 'react-router-dom';\n\nconst IMG = 'https://dummyimage.com/300x450/000/0011ff&text=Not+find+photo';\n\nconst Moives = ({ dataMovie }) => {\n  const getIdParams = useParams('id');\n  const location = useLocation();\n\n  const {\n    original_title,\n    original_language,\n    poster_path,\n    release_date,\n    overview,\n    homepage,\n  } = dataMovie;\n  return (\n    <>\n      <Box px={100} py={0} display=\"flex\" alignItems=\"center\" gridGap={20}>\n        <Box color=\"black\">\n          <h2>{original_title}</h2>\n          <img\n            src={\n              !poster_path\n                ? IMG\n                : `https://image.tmdb.org/t/p/w300${poster_path}`\n            }\n            alt={original_title}\n          />\n        </Box>\n        <ListMoviesDetails>\n          <ItemMovies>\n            <p>Language: {original_language}</p>\n          </ItemMovies>\n          <ItemMovies>\n            <p>Ralease: {release_date}</p>\n          </ItemMovies>\n          <ItemMovies>\n            <p>Homepage: {homepage}</p>\n          </ItemMovies>\n          <ItemMovies>\n            <p>Overview: {overview}</p>\n          </ItemMovies>\n          <ItemMovies>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              gridGap={20}\n            >\n              <LinksRouter\n                to=\"cast\"\n                state={{ from: location, id: getIdParams }}\n              >\n                Cast\n              </LinksRouter>\n              <LinksRouter\n                to=\"reviews\"\n                state={{ from: location, id: getIdParams }}\n              >\n                Reviews\n              </LinksRouter>\n            </Box>\n          </ItemMovies>\n        </ListMoviesDetails>\n      </Box>\n    </>\n  );\n};\n\nexport default Moives;\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport { ApiServiseMovieDetails } from '../Api/ServiceApi';\nimport { Box, LinksRouterBack } from 'CommonStyle/Common.styled';\nimport { useQuery } from 'react-query';\nimport Moives from 'components/Item/ItemMovies';\n\nexport default function MovieDetails() {\n  const [dataMovie, setDataMovie] = useState([]);\n  const getIdParams = useParams('id');\n\n  const { isLoading } = useQuery(\n    ['get idMov', getIdParams.id],\n    () => ApiServiseMovieDetails(getIdParams.id),\n    {\n      onSuccess: ({ data }) => {\n        setDataMovie(data);\n      },\n\n      onError: error => {\n        alert(error.message);\n      },\n    }\n  );\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  return (\n    <>\n      <Box mr=\"auto\" display=\"flex\" gridGap=\"20px\">\n        <LinksRouterBack to={backLinkHref}>Back</LinksRouterBack>\n        <LinksRouterBack to=\"/\">Home</LinksRouterBack>\n      </Box>\n      <Box\n        as=\"main\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        gridGap={20}\n      >\n        {isLoading ? (\n          <h1 style={{ color: 'red' }}>Isloading...</h1>\n        ) : (\n          <Moives dataMovie={dataMovie} />\n        )}\n        <Outlet />\n      </Box>\n    </>\n  );\n}\n"],"names":["KEY","URL","ApiServiseTrand","axios","then","res","catch","error","toast","message","ApiServiseMovieDetails","id","ApiServiseCastMovie","page","ApiServiceSerchMovie","query","propTypes","PropTypes","ListMoviesDetails","styled","ItemMovies","dataMovie","getIdParams","useParams","location","useLocation","original_title","original_language","poster_path","release_date","overview","homepage","px","py","display","alignItems","gridGap","color","src","alt","justifyContent","to","state","from","MovieDetails","useState","setDataMovie","isLoading","useQuery","onSuccess","data","onError","alert","backLinkHref","mr","as","flexDirection","style"],"sourceRoot":""}