{"version":3,"file":"static/js/186.2eb2b033.chunk.js","mappings":"iUAIMA,EAAM,mCACNC,EAAM,gCAECC,EAAe,mCAAG,WAAOC,EAAOC,GAAd,iFAChBC,IAAAA,IAAA,UACHJ,EADG,uCAC+BD,IACzCM,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAME,QACnB,IAR0B,mFAAH,wDAWfC,EAAsB,mCAAG,WAAMC,GAAN,iFACvBR,IAAAA,IAAA,UACHJ,EADG,iBACSY,EADT,oBACuBb,IACjCM,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAME,QACnB,IARiC,mFAAH,sDAWtBG,EAAmB,mCAAG,WAAOV,EAAMS,GAAb,iFACpBR,IAAAA,IAAA,UACHJ,EADG,iBACSY,EADT,YACeT,EADf,oBAC+BJ,EAD/B,2BAEVM,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAME,QACnB,IAR8B,mFAAH,wDAWnBI,EAAoB,mCAAG,WAAMZ,GAAN,iFACrBE,IAAAA,IAAA,UAENJ,EAFM,gCAEqBD,EAFrB,iCAEiDG,EAFjD,gCAIVG,MAAK,SAAAC,GACJ,OAAOA,CACR,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAME,QACnB,IAV+B,mFAAH,sDAajCT,EAAgBc,UAAY,CAC1Bb,MAAOc,IAAAA,OAAAA,WACPb,KAAMa,IAAAA,OAAAA,W,uHClDO,SAASC,EAAT,GAAgC,IAAbd,EAAY,EAAZA,KAAMS,EAAM,EAANA,GACtC,GAA8BM,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACHT,IACLC,EAAAA,EAAAA,IAAoBV,EAAMS,GAAIP,MAAK,YAAe,IAAZiB,EAAW,EAAXA,KACpCF,EAAWE,EACZ,GACF,GAAE,CAACV,EAAIT,IACR,IAAQoB,EAAYJ,EAAZI,QACR,OACE,8BACIA,GAA8B,IAAnBA,EAAQC,QAKnB,SAAC,KAAD,WACE,SAAC,KAAD,CAAKC,GAAG,KAAKC,QAAQ,OAAOC,cAAc,SAASC,QAAQ,OAA3D,SACGL,EAAQM,KAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,QAASnB,EAAc,EAAdA,GAAIoB,EAAU,EAAVA,IACnC,OACE,2BACE,wBACE,uBAAIF,OAEN,uBAAIC,KACJ,wBACE,uBAAIC,OAEN,mBAROpB,EAWZ,SAnBL,SAAC,KAAD,CAAKc,QAAQ,OAAOO,MAAM,QAA1B,UACE,2DAwBT,C","sources":["components/Api/ServiceApi.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nconst KEY = '4568c047ac29c58c34b8c5ba81189d61';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const ApiServiseTrand = async (query, page) => {\n  return await axios\n    .get(`${URL}trending/movie/week?api_key=${KEY}`)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      toast.error(error.message);\n    });\n};\n\nexport const ApiServiseMovieDetails = async id => {\n  return await axios\n    .get(`${URL}movie/${id}?api_key=${KEY}`)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      toast.error(error.message);\n    });\n};\n\nexport const ApiServiseCastMovie = async (page, id) => {\n  return await axios\n    .get(`${URL}movie/${id}/${page}?api_key=${KEY}&language=en-US&page=1`)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      toast.error(error.message);\n    });\n};\n\nexport const ApiServiceSerchMovie = async query => {\n  return await axios\n    .get(\n      `${URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      toast.error(error.message);\n    });\n};\n\nApiServiseTrand.propTypes = {\n  query: PropTypes.string.isRequired,\n  page: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { ApiServiseCastMovie } from '../Api/ServiceApi';\nimport { Box } from 'CommonStyle/Common.styled';\n\nexport default function Reviews({ page, id }) {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!id) return;\n    ApiServiseCastMovie(page, id).then(({ data }) => {\n      setReviews(data);\n    });\n  }, [id, page]);\n  const { results } = reviews;\n  return (\n    <>\n      {!results || results.length === 0 ? (\n        <Box display=\"flex\" color=\"black\">\n          <h2>Sorry, nothing was found (:</h2>\n        </Box>\n      ) : (\n        <Box>\n          <Box as=\"ul\" display=\"flex\" flexDirection=\"column\" gridGap=\"10px\">\n            {results.map(({ author, content, id, url }) => {\n              return (\n                <li key={id}>\n                  <p>\n                    <b>{author}</b>\n                  </p>\n                  <p>{content}</p>\n                  <p>\n                    <b>{url}</b>\n                  </p>\n                  <p></p>\n                </li>\n              );\n            })}\n          </Box>\n        </Box>\n      )}\n    </>\n  );\n}\n\nReviews.propTypes = {\n  page: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n"],"names":["KEY","URL","ApiServiseTrand","query","page","axios","then","res","catch","error","toast","message","ApiServiseMovieDetails","id","ApiServiseCastMovie","ApiServiceSerchMovie","propTypes","PropTypes","Reviews","useState","reviews","setReviews","useEffect","data","results","length","as","display","flexDirection","gridGap","map","author","content","url","color"],"sourceRoot":""}